#!/usr/bin/env python

import os
import subprocess
import typer
from pathlib import Path
from typing import Optional, List

app = typer.Typer()
secrets_dir = os.environ.get("SECRETS_DIR")

@app.command()
def encrypt(
    name: Optional[List[str]] = typer.Argument(None, help="The files within SECRETS_DIR to encrypt"),
    path: Path = typer.Option(None, "--secrets-directory", "-d", envvar='SECRETS_DIR', help="Directory containing the encrypted secrets"),
    all: bool = typer.Option(False, help="Encrypt all files in SECRETS_DIR")
):
    """
    Encrypt a file containing secrets
    """
    __validate_path(path)
    files = []
    if all:
        for file in path.iterdir():
            files.append(file)
    else:
        for filename in name:
            files.append(path.joinpath(filename))

    for file in files:
        if os.path.isfile(file) and not file.name.endswith(".enc") and not file.name == "README.md":
            print(file)
            encrypted = open("{}.enc".format(file), "wb+")
            subprocess.run(["keybase", "pgp", "encrypt", "-i", file], stdout=encrypted)

@app.command()
def decrypt(
    name: Optional[List[str]] = typer.Argument(None, help="The files within SECRETS_DIR to encrypt"),
    path: Path = typer.Option(None, "--secrets-directory", "-d", envvar='SECRETS_DIR', help="Directory containing the encrypted secrets"),
    all: bool = typer.Option(False, help="Decrypt all files in SECRETS_DIR")
):
    """
    Decrypt a file containing secrets
    """
    __validate_path(path)
    files = []
    if all:
        for file in path.glob('*.enc'):
            files.append(file)
    else:
        for filename in name:
            files.append(path.joinpath(filename + ".enc"))

    for file in files:
        if os.path.isfile(file) and file.name.endswith(".enc"):
            print(file)
            decrypted = open(path.joinpath(file.name[0:-4]), "wb+")
            subprocess.run(["keybase", "pgp", "decrypt", "-i", file], stdout=decrypted )

def __validate_path(path: Path):
    if not path.is_dir() or not path.exists():
        typer.echo("PATH is not a directory")
        raise typer.Exit(code=1)
    

if __name__ == "__main__":
    app()
